{"version":3,"sources":["components/NavBar/Settings/Settings.js","components/NavBar/Navbar.js","components/DashBoard/WorkOrder/Wordorder.js","components/DashBoard/Rating/Getrate.js","components/DashBoard/Rating/Rates.js","components/DashBoard/Rating/Rating.js","components/DashBoard/Dashboard.js","components/SignIn/Sigin.js","components/Projects/Project.js","components/Projects/Projects.js","components/Employee/Prompt.js","components/Employee/Employee.js","components/Employee/EmployeeDetails.js","components/Employee/Addemployee.js","components/Employee/EmployeeContainer.js","components/Changepassword/Changepassword.js","App.js","serviceWorker.js","index.js","icon.jpg"],"names":["Settings","isSettings","setSettings","className","onClick","to","Navbar","props","useState","src","icon","alt","isAuth","setAuth","e","Workorder","workOrder","removeWorkOrder","isExpanded","setExpanded","assign_to","setAssignTo","product_name","action","work_order_type","woNumber","expected_date","accepted_by","custtomer_name","customer_contact","customer_email","htmlFor","type","name","onChange","target","value","preventDefault","stopPropagation","options","method","url","xsrfCookieName","xsrfHeaderName","data","assigned_to","project_id","crossorigin","headers","axios","defaults","withCredentials","then","res","console","log","catch","Getrate","setClicked","rateArray","rating","setRate","emp_id","date","map","rate","activity","work_order_no","planned_time","actual_time","work_remark","submission_remark","dependency","placeholder","min","max","parseInt","alert","Rates","removeRate","handleScrool","bool","isClicked","isDone","Rating","change","setChange","rates","setRatings","id","filter","useEffect","get","datas","JSON","parse","arr","act","forEach","fields","hasOwnProperty","push","err","length","index","key","Dashboard","scrool","setScroll","workOrders","setWorkOrder","prev","mounted","values","pk","Wordorder","SignIn","password","state","setState","autoComplete","Project","status","wo_issue_date","Projects","Prompt","msg","handleDelete","setPromptVisible","class","Employee","img","first_name","last_name","displayEmployee","isPromptVisible","faTrashAlt","EmployeeDetails","details","returnBack","work","setWork","d","Date","empid","getFullYear","getMonth","getDate","email","phone_no","educational_qualification","date_of_joining","street","district","individual","Addemployee","handleAdd","setAddVisible","avail","setAvail","item","EmpolyeeContainer","isEmployeeSelected","setEmployeeSelected","setDetails","employees","setemployees","isAddVisible","handleDisplay","val","find","employee","style","display","alignItems","Changepassword","old","new","confirm","setMsg","handleChange","persist","color","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.20898637.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Settings.css\";\r\n\r\nfunction Settings({ isSettings,setSettings }) {\r\n    return(\r\n        <div>\r\n            <section className={\"setting \" + (isSettings && \"setting-visible\")} >\r\n                    <div className=\"setting-option\">\r\n                    </div>\r\n                    <div className=\"setting-option\" onClick={()=>{setSettings(0)}}>\r\n                        <Link to=\"/homepage/build/dashboard\">Home</Link>\r\n                    </div>\r\n                    <div className=\"setting-option\" onClick={()=>{setSettings(0)}}>\r\n                        <Link to=\"/homepage/build/projects\">Project Details</Link>\r\n                    </div>\r\n                    <div className=\"setting-option\" onClick={()=>{setSettings(0)}}>\r\n                        <Link to=\"/homepage/build/employees\" >Employee</Link>\r\n                    </div>\r\n                    <div className=\"setting-option\" onClick={()=>{setSettings(0)}}>\r\n                        <Link to=\"/homepage/build/change_password\">Change Password</Link>\r\n                    </div>\r\n            </section>\r\n            <div className={\"overlay \" + (isSettings && \"overlay-visible\")} onClick={()=>{setSettings(0)}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React, { useState } from \"react\";\r\nimport icon from \"../../icon.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Settings from \"./Settings/Settings\";\r\nimport './Navbar.css';\r\n\r\nfunction Navbar(props) {\r\n\r\n    let [isSettings,setSettings] = useState(0);\r\n\r\n    return (\r\n        <header className = \"nav-bar\">\r\n            <Link to=\"/homepage/build/dashboard\"><img src={icon} alt=\"logo\" className=\"logo\" /></Link>\r\n            { props.isAuth && <div className=\"links\">\r\n                <Link to=\"/homepage/build\" onClick={()=>{props.setAuth(false)}}>Log out</Link>\r\n                <div className=\"avatar\" onClick={(e)=>{setSettings(1)}}></div>\r\n            </div> }\r\n            \r\n            <Settings isSettings={isSettings} setSettings={setSettings} />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React,{ useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport DjangoCSRFToken from 'django-react-csrftoken';\r\nimport './Workorder.css';\r\n\r\nfunction Workorder({ workOrder,removeWorkOrder }) {\r\n\r\n    let [isExpanded,setExpanded] = useState(true);\r\n    let [assign_to,setAssignTo] = useState(\"\");\r\n\r\n    function handleButtonClick(e){\r\n        setExpanded(true);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const options = {\r\n            method: 'post',\r\n            url: '/logger/api/web/post/assign_to',\r\n            xsrfCookieName: 'csrftoken',\r\n            xsrfHeaderName: 'X-CSRFTOKEN',\r\n            data:{assigned_to:assign_to,project_id:workOrder.woNumber},\r\n            // withCredentials: false,\r\n            crossorigin:true,\r\n            headers: {'Access-Control-Allow-Credentials': '*'}\r\n        };\r\n        axios.defaults.withCredentials = true    \r\n        axios(options)\r\n        .then(res=>{\r\n            removeWorkOrder();\r\n            console.log(res.data);\r\n        })\r\n        .catch(res=>{\r\n            console.log(\"Server Error\");\r\n        });\r\n    }\r\n\r\n    function handleShift(e) {\r\n        setExpanded(true);\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n    function handleChange(e){\r\n        setAssignTo(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div onClick = {()=>{setExpanded(false);}} className={\"work-order \" + (isExpanded && \"work-order-short\")} >\r\n            <h3>{workOrder.product_name}</h3>\r\n            <div className=\"expand\">\r\n                <form action=\"\">\r\n                    <DjangoCSRFToken />\r\n                    <label>WO Number: {workOrder.work_order_type+\"-\"+workOrder.woNumber}</label>\r\n                    <label>Expected Date: {workOrder.expected_date}</label>\r\n                    <label>Accepted By: {workOrder.accepted_by}</label>\r\n                    <label>Customer Name: {workOrder.custtomer_name}</label>\r\n                    <label>Customer Number: {workOrder.customer_contact}</label>\r\n                    <label>Customer Email: {workOrder.customer_email}</label>\r\n                    <label htmlFor=\"assign-to\">Assign to:</label>\r\n                    <input type=\"text\" name=\"assign-to\" className=\"textarea textarea-inline\" onChange={handleChange} value={assign_to} />\r\n                    <button name=\"submit\" className=\"btn btn-small btn-inline\" onClick={handleButtonClick}>Assign</button>\r\n                    <button name=\"submit\" className=\"btn btn-small btn-inline\" onClick={handleShift}>Later</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Workorder;","import React, { useState } from \"react\";\r\nimport \"./Getrate.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction Getrate({ setClicked,rateArray }) {\r\n\r\n    let [rating,setRate] = useState(\"\");\r\n    console.log(rating);\r\n\r\n    function rate(){\r\n        if(rating<=100 && rating>=0){\r\n            const options = {\r\n                method: 'post',\r\n                url: '/logger/api/web/post/manager_rating',\r\n                xsrfCookieName: 'csrftoken',\r\n                xsrfHeaderName: 'X-CSRFTOKEN',\r\n                data:{rating:parseInt(rating),date:rateArray[0].date,emp_id:rateArray[0].emp_id},\r\n                // withCredentials: false,\r\n                crossorigin:true,\r\n                headers: {'Access-Control-Allow-Credentials': '*'}\r\n            };\r\n            axios.defaults.withCredentials = true    \r\n            axios(options)\r\n            .then(res=>{\r\n                setClicked(false,true);\r\n            })\r\n            .catch(res=>{\r\n                console.log(\"Server Error\");\r\n            });\r\n        }\r\n        else{\r\n            alert(\"Rating must be between 0-100\");\r\n            setRate(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"get-rate-container\">\r\n            <div className=\"get-rate\">\r\n                <h3>Activities of {rateArray[0].emp_id} on {rateArray[0].date}</h3>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Activity</th>\r\n                            <th>WO Number</th>\r\n                            <th>Planned time</th>\r\n                            <th>Actual time</th>\r\n                            <th>Work Remark</th>\r\n                            <th>Submission Remark</th>\r\n                            <th>Dependency</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                {rateArray.map(rate => {\r\n                    console.log(rate);\r\n                    return(<tr>\r\n                        <td>{rate.activity}</td>\r\n                        <td>{rate.work_order_no}</td>\r\n                        <td>{rate.planned_time}</td>\r\n                        <td>{rate.actual_time}</td>\r\n                        <td>{rate.work_remark}</td>\r\n                        <td>{rate.submission_remark}</td>\r\n                        <td>{rate.dependency}</td>\r\n                    </tr>)\r\n                })}\r\n                </tbody>\r\n                </table>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"textarea textarea-inline\" \r\n                    value={rating} \r\n                    placeholder=\"Out of 100\" \r\n                    onChange={(e) => setRate(e.target.value)}\r\n                    min=\"0\"\r\n                    max=\"100\" />\r\n                <button className=\"btn btn-small btn-inline\" \r\n                        onClick={()=>{rate()}}>\r\n                        Rated\r\n                </button>\r\n            </div>\r\n            <div className=\"overlay overlay-visible\" onClick={()=>{setClicked(false,false)}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Getrate;","import React, { useState } from \"react\";\r\nimport Getrate from \"./Getrate\";\r\nimport \"./Rates.css\";\r\n\r\n\r\nfunction Rates({ rate,removeRate,handleScrool }){\r\n\r\n    let [isClicked,setClicked] = useState({\r\n        bool: false\r\n    });\r\n\r\n    function clickSetter(bool,isDone){\r\n        if(bool === false){\r\n            setClicked({\r\n                bool: false\r\n            });  \r\n        }\r\n        if(isDone === true){\r\n            removeRate(rate[0].emp_id,rate[0].date);\r\n        }\r\n        handleScrool(false);\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <div className=\"rate\" onClick={()=>{setClicked({bool:true});handleScrool(true)}}>\r\n                <h4>Rate: {rate[0].emp_id}</h4>\r\n            </div>\r\n            {isClicked.bool && <Getrate setClicked={ clickSetter } rateArray={ rate }/>}\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default Rates;","import React, { useState,useEffect } from \"react\";\r\nimport Rates from \"./Rates\";\r\nimport axios from \"axios\";\r\nimport \"./Rating.css\"\r\n\r\nfunction Rating({handleScrool}) {\r\n\r\n    let [change,setChange] = useState(false);\r\n    let [rates,setRatings] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"/logger/api/web/get/rating\")\r\n        .then((res)=>{\r\n            let datas = JSON.parse(res.data);\r\n            let activity = {};\r\n            let arr = [];\r\n            datas.forEach(data => {\r\n                let fields = data.fields;\r\n                let id = `${fields.emp_id}_${fields.date}`;\r\n                if(activity.hasOwnProperty(id)){\r\n                    activity[id].push(fields);\r\n                }\r\n                else{\r\n                    activity[id] = [fields];\r\n                }\r\n            });\r\n            for(let act in activity){\r\n                arr.push(activity[act]);\r\n            }\r\n            setRatings(arr);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setRatings([]);\r\n        });\r\n    },[change]);\r\n\r\n\r\n    function removeRate(id,date){\r\n        setRatings(rates.filter((rate)=>{\r\n            return `${id}+${date}` !== `${rate.emp_id}+${rate.date}`; \r\n        }));\r\n        setChange(!change);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {rates.length !==0? \r\n                rates.map( (rate,index) => {\r\n                    return (<Rates rate = {rate} key={index} id={index} removeRate={removeRate} handleScrool={handleScrool} />)\r\n                }):\r\n                <p className=\"no-rate\">No Works to Rate</p>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating;","import React, { useState, useEffect } from \"react\";\r\nimport Wordorder from \"./WorkOrder/Wordorder\";\r\nimport Rating from \"./Rating/Rating\";\r\nimport { Redirect } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport \"./Dashboard.css\";\r\n\r\nfunction Dashboard(props) {\r\n\r\n    let [scrool,setScroll] = useState(true);\r\n    let [change,setChange] = useState(false);\r\n    let [workOrders,setWorkOrder] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        let mounted = true;\r\n        if(mounted){\r\n            axios.get(\"/logger/api/web/get/wo_pending\")\r\n            .then((res)=>{\r\n                let datas = JSON.parse(res.data);\r\n                let values = datas.map((data)=>{\r\n                    let pk = data.pk;\r\n                    let fields = data.fields;\r\n                    fields[\"woNumber\"] = pk;\r\n                    return fields;\r\n                });\r\n                setWorkOrder(values);\r\n            })\r\n            .catch((res)=>{\r\n                //setWorkOrder([]);\r\n                console.log(\"ERROR\");\r\n            });\r\n        }\r\n        \r\n        return ()=> mounted = false;\r\n        \r\n    },[change]);\r\n\r\n    function removeWorkOrder() {\r\n        setChange(prev => !prev);\r\n    }\r\n\r\n    function handleScrool(bool){\r\n        if(bool){\r\n           setScroll(false); \r\n        }\r\n        else{\r\n           setScroll(true);\r\n        }\r\n    }\r\n\r\n    if(props.isAuth === false){\r\n        return <Redirect to=\"/homepage/build\" />\r\n    }\r\n    else{\r\n        return (\r\n            <section className={\"dashboard-container \" + (!scrool && \"scroll-hidden\")}>\r\n                <div className=\"work-order-container\">\r\n                    <h1>Work Orders Pending:</h1>\r\n                    {\r\n                    workOrders.length !== 0?\r\n                        workOrders.map((workOrder,id) => {\r\n                            return <Wordorder workOrder={workOrder} removeWorkOrder={removeWorkOrder} key={workOrder.woNumber} />\r\n                        }):\r\n                        <h3>No Work order pending refresh for updates</h3>\r\n                    }\r\n                </div>\r\n                <div className=\"rating-container\">\r\n                    <h1>Rate Works</h1>\r\n                    <Rating handleScrool={handleScrool}/>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { useState, useEffect } from \"react\";\r\nimport { Link,Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './Signin.css';\r\n\r\nfunction SignIn(props) {\r\n    \r\n    let [state,setState] = useState({\r\n        password: \"\"\r\n    });\r\n\r\n    function handleChange(e) {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        const options = {\r\n            method: 'post',\r\n            url: '/logger/api/web/post/authenticate',\r\n            xsrfCookieName: 'csrftoken',\r\n            xsrfHeaderName: 'X-CSRFTOKEN',\r\n            data:{id:1,password:state.password},\r\n            crossorigin:true,\r\n            headers: {'Access-Control-Allow-Credentials': '*'}\r\n        };\r\n        axios.defaults.withCredentials = true;    \r\n        axios(options)\r\n        .then(res => {\r\n            if(res.data === \"Success\"){\r\n                props.setAuth(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    if(props.isAuth === true) {\r\n        return <Redirect to=\"/homepage/build/dashboard\" />\r\n    }\r\n    \r\n    else{\r\n        return ( \r\n            <section className=\"login-container\" >\r\n                <h1>Welcome</h1>\r\n                <form action=\"\" className=\"log-in\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" name=\"password\" autoComplete=\"off\" className=\"textarea\" value={state.password} onChange={handleChange} />\r\n                    <Link to=\"/homepage/build/dashboard\"><button className=\"btn\" onClick={handleSubmit}>Log in</button></Link>\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React,{ useState } from \"react\";\r\n\r\nfunction Project({ workOrder }) {\r\n\r\n    let [isExpanded,setExpanded] = useState(true);\r\n\r\n    function handleButtonClick(e){\r\n        setExpanded(true);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div onClick = {()=>{setExpanded(false);}} className={\"work-order \" + (isExpanded && \"work-order-short\")} >\r\n            <h3>{workOrder.product_name}</h3>\r\n            <div className=\"expand\">\r\n                <form action=\"\">\r\n                    <label>Project Status: {workOrder.status}</label>\r\n                    <label>Work Order Issue Date: {workOrder.wo_issue_date}</label>\r\n                    <label>WO Number: {workOrder.work_order_type+\"-\"+workOrder.woNumber}</label>\r\n                    <label>Expected Date: {workOrder.expected_date}</label>\r\n                    <label>Accepted By: {workOrder.accepted_by}</label>\r\n                    <label>Customer Name: {workOrder.custtomer_name}</label>\r\n                    <label>Customer Number: {workOrder.customer_contact}</label>\r\n                    <label>Customer Email: {workOrder.customer_email}</label>\r\n                    <label htmlFor=\"assign-to\">Assign to: {workOrder.assigned_to}</label>\r\n                    <button name=\"submit\" className=\"btn btn-small btn-inline\" onClick={handleButtonClick}>OK</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Project;","import React,{ useState,useEffect } from \"react\";\r\nimport Project from \"./Project\";\r\nimport { Redirect } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport \"./Projects.css\"\r\n\r\nfunction Projects({ isAuth }) {\r\n    \r\n    let [workOrders,setWorkOrder] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        axios.get(\"/logger/api/web/get/current_projects\")\r\n        .then((res)=>{\r\n            let datas = JSON.parse(res.data);\r\n            let values = datas.map((data)=>{\r\n                let pk = data.pk;\r\n                let fields = data.fields;\r\n                fields[\"woNumber\"] = pk;\r\n                return fields;\r\n            });\r\n            setWorkOrder(values);\r\n        })\r\n    },[]);\r\n\r\n    if(isAuth === false){\r\n        return <Redirect to=\"/homepage/build\" />\r\n    }\r\n\r\n    else{\r\n        return(\r\n            <div className=\"projects\">\r\n                <h1>Projects</h1>\r\n                {workOrders.length?\r\n                workOrders.map(workOrder => {\r\n                    return <Project workOrder={workOrder} />\r\n                }):\r\n                <h3>No Projects to display refresh for updates</h3>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects;","import React from \"react\";\r\nimport \"./Prompt.css\"\r\n\r\nexport default function Prompt({msg,handleDelete,setPromptVisible}) {\r\n    return (\r\n        <div class=\"prompt-container\">\r\n            <div class=\"prompt\">\r\n                <p>{msg}</p>\r\n                <button class=\"btn btn-inline btn-small\" onClick={(e) => {setPromptVisible(false);e.stopPropagation()}}>Cancel</button>\r\n                <button class=\"btn btn-inline btn-small\" onClick={(e) => {handleDelete();e.stopPropagation()}}>Yes</button>\r\n            </div>\r\n            <div class=\"overlay overlay-visible\"></div>\r\n        </div>\r\n    ) \r\n}","import React,{useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport Prompt from \"./Prompt\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport \"./Employee.css\"\r\n\r\nfunction Employee({ img,first_name,last_name,displayEmployee,id,setChange }){\r\n\r\n    let [isPromptVisible,setPromptVisible] = useState(false);\r\n\r\n    function handleDelete(e) {\r\n        const options = {\r\n            method: 'post',\r\n            url: '/logger/api/web/post/delete_employee',\r\n            xsrfCookieName: 'csrftoken',\r\n            xsrfHeaderName: 'X-CSRFTOKEN',\r\n            data:{emp_id:id},\r\n            // withCredentials: false,\r\n            crossorigin:true,\r\n            headers: {'Access-Control-Allow-Credentials': '*'}\r\n        };\r\n        axios.defaults.withCredentials = true;    \r\n        axios(options)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            setChange(prev => !prev);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"employee\" onClick={()=>{displayEmployee(id)}}>\r\n            <div className=\"employee-avatar\">\r\n                <img src=\"\"></img>\r\n            </div>\r\n            <p>{first_name} {last_name}</p>\r\n            <div className=\"employee-delete\" onClick={(e) => {setPromptVisible(true);e.stopPropagation()}}>\r\n                <FontAwesomeIcon icon={faTrashAlt} />\r\n            </div>\r\n            {isPromptVisible && <Prompt msg=\"Are you sure you want to delete this employee?\" handleDelete={handleDelete} setPromptVisible={setPromptVisible}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Employee;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./EmployeeDetails.css\"\r\n\r\nfunction EmployeeDetails({ details,returnBack }) {\r\n\r\n    let [work,setWork] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        let d = new Date();\r\n        axios.get(\"http://127.0.0.1:8000/logger/api/web/get/employee_work?id=\" + details.empid + `&date=${d.getFullYear()}-${d.getMonth()+1}-${d.getDate()}`)\r\n        .then(res=>{\r\n            let datas = JSON.parse(res.data);\r\n            let values = datas.map((data)=>{\r\n                let pk = data.pk;\r\n                let fields = data.fields;\r\n                fields[\"id\"] = pk;\r\n                return fields;\r\n            });\r\n            console.log(values);\r\n            setWork(values);\r\n        })\r\n        .catch(res=>{\r\n            console.log(\"ERROR\" + res);\r\n        });\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <div className=\"employee-details\">\r\n            <div className=\"employee-division\">\r\n                <h2>Employee Details</h2>\r\n                <p><span>Name: </span>{details.first_name +\" \"+details.last_name}</p>\r\n                <p><span>Id: </span>{details.empid}</p>\r\n                <p><span>E-mail: </span>{details.email}</p>\r\n                <p><span>Phone Number: </span>{details.phone_no}</p>\r\n                <p><span>Educational Qualification: </span>{details.educational_qualification}</p>\r\n                <p><span>Date of joining: </span>{details.date_of_joining}</p>\r\n                <p><span>Residence: </span><br />{details.street}<br />{details.district}<br />{details.state}</p>\r\n                <button className=\"btn\" onClick={()=>{returnBack()}}>Done</button>\r\n            </div>\r\n            <div className=\"employee-work-table \">\r\n                <h2>Current Activity</h2>\r\n                <table className=\"table \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Activity</th>\r\n                            <th>Planned time</th>\r\n                            <th>Remarks</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {work.map(individual=>{\r\n                            return (<tr>\r\n                                        <td>{individual.activity}</td>\r\n                                        <td>{individual.planned_time}</td>\r\n                                        <td>{individual.work_remark}</td>\r\n                                    </tr>)\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeDetails;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Addemployee.css\";\r\n\r\nexport default function Addemployee ({handleAdd,setAddVisible}) {\r\n\r\n    let [avail,setAvail] = useState([]);\r\n    let [change,setChange] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        axios.get(\"/logger/api/web/get/get_id\")\r\n        .then(res => {\r\n            let ids = JSON.parse(res.data);\r\n            let arr = ids.map(id => {\r\n                return id.pk;\r\n            })\r\n            setAvail(arr);\r\n        });\r\n    },[change]);\r\n\r\n    return (\r\n        <div className=\"add-container\">\r\n            <div className=\"add\">\r\n                <h3>Available ID</h3>\r\n                {avail.map(item => {\r\n                    return (<p key={item}>{item}</p>);\r\n                })}\r\n               <button className=\"btn btn-inline btn-small\" onClick={(e) => {setAddVisible(false);e.stopPropagation()}}>Cancel</button>\r\n                <button className=\"btn btn-inline btn-small\" onClick={(e) => {handleAdd();setChange(prev => !prev);e.stopPropagation()}}>Yes</button>\r\n            </div>\r\n            <div className=\"overlay overlay-visible\"></div>\r\n        </div>\r\n    )\r\n}","import React, { useState,useEffect } from \"react\";\r\nimport Employee from \"./Employee\";\r\nimport EmployeeDetails from \"./EmployeeDetails\";\r\nimport Addemployee from \"./Addemployee\";\r\nimport { Redirect } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport \"./EmployeeContainer.css\"\r\n\r\nfunction EmpolyeeContainer({ isAuth }) {\r\n    let [isEmployeeSelected,setEmployeeSelected] = useState(false);\r\n    let [details,setDetails] = useState(null);\r\n    let [employees,setemployees] = useState([]);\r\n    let [change,setChange] = useState(true);\r\n    let [isAddVisible,setAddVisible] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        let mounted = true;\r\n        if(mounted){\r\n            axios.get(\"/logger/api/web/get/employee\")\r\n            .then((res)=>{\r\n                let datas = JSON.parse(res.data);\r\n                let values = datas.map((data)=>{\r\n                    let pk = data.pk;\r\n                    let fields = data.fields;\r\n                    fields[\"empid\"] = pk;\r\n                    return fields;\r\n                });\r\n                setemployees(values);\r\n            })\r\n            .catch((res)=>{\r\n                //setWorkOrder([]);\r\n                console.log(\"ERROR\" + res);\r\n            });\r\n        }\r\n        \r\n        return ()=> mounted = false;\r\n        \r\n    },[change]);\r\n    \r\n    function handleDisplay(id) {\r\n        setEmployeeSelected(true);\r\n        let val = employees.find((employee)=>employee.empid===id);\r\n        setDetails(val);\r\n    }\r\n\r\n    function returnBack(){\r\n        setEmployeeSelected(false);\r\n    }\r\n\r\n    function handleAdd() {\r\n        axios.get(\"/logger/api/web/get/add_employee\")\r\n        .then((res) => console.log(res.data));\r\n    }\r\n\r\n    return isAuth? isEmployeeSelected ? \r\n           (<EmployeeDetails details={details} returnBack={returnBack}/>) : \r\n           (\r\n            <div className=\"employee-container-outer\">\r\n                <h1 style={{display:\"flex\",alignItems:\"center\"}}>Employees: \r\n                    <button className=\"btn btn-inline btn-small\" onClick={() => setAddVisible(true)}>ADD</button>\r\n                </h1>\r\n                <div className=\"employee-container\">\r\n                    {employees.map(employee=>{\r\n                        return <Employee first_name={employee.first_name} \r\n                                        last_name={employee.last_name} \r\n                                        displayEmployee = { handleDisplay } \r\n                                        id={employee.empid} key={employee.empid}\r\n                                        setChange={setChange} />\r\n                    })}\r\n                </div>\r\n                {isAddVisible && <Addemployee setAddVisible={setAddVisible} handleAdd={handleAdd} />}\r\n            </div>\r\n            ):\r\n            <Redirect to=\"/homepage/build\" />\r\n}\r\n\r\nexport default EmpolyeeContainer;","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport \"./Changepassword.css\"\r\n\r\nexport default function Changepassword({isAuth}) {\r\n\r\n    let [state,setState] = useState({\r\n        old: \"\",\r\n        new: \"\",\r\n        confirm: \"\"\r\n    });\r\n    let [msg,setMsg] = useState(\"\");\r\n\r\n    function handleChange(e){\r\n        e.persist()\r\n        setState(prev => {\r\n            return {\r\n                ...prev,\r\n                [e.target.id]: e.target.value\r\n            }\r\n        });\r\n        console.log(e.target);\r\n    }\r\n\r\n    function handleSubmit(){\r\n        if(state.old===\"\" || state.new===\"\" ||state.confirm===\"\"){\r\n            setMsg(\"Feilds cannot be Empty\");\r\n        }\r\n        else if(state.new !== state.confirm){\r\n            setMsg(\"Confirmed password did not match\");\r\n        }\r\n        else {\r\n            const options = {\r\n                method: 'post',\r\n                url: '/logger/api/web/post/change_password',\r\n                xsrfCookieName: 'csrftoken',\r\n                xsrfHeaderName: 'X-CSRFTOKEN',\r\n                data:{password:state.new,old:state.old,id:1},\r\n                crossorigin:true,\r\n                headers: {'Access-Control-Allow-Credentials': '*'}\r\n            };\r\n            axios.defaults.withCredentials = true    \r\n            axios(options)\r\n            .then(res=>{\r\n                setMsg(res.data);\r\n            })\r\n            .catch(res=>{\r\n                setMsg(\"Something went wrong try again later\");\r\n            });\r\n        }\r\n        setState({\r\n            old: \"\",\r\n            new: \"\",\r\n            confirm: \"\"\r\n        });\r\n    }\r\n\r\n    if(isAuth === false){\r\n        return <Redirect to=\"/homepage/build\" />\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"password-container\">\r\n                <label>Old Password</label>\r\n                <input id=\"old\" type=\"password\" className=\"textarea\" value={state.old} onChange={handleChange} />\r\n                <label>New Password</label>\r\n                <input id=\"new\" type=\"password\" className=\"textarea\" value={state.new} onChange={handleChange} />\r\n                <label>Confirm New Password</label>\r\n                <input id=\"confirm\" type=\"password\" className=\"textarea\" value={state.confirm} onChange={handleChange} /> \r\n                <button className=\"btn\" onClick={handleSubmit}>Change</button>\r\n                <div style={{color:msg==\"Updated Successfully\"?\"green\":\"red\"}}>*{msg}</div>\r\n            </div>\r\n        );\r\n    }   \r\n}","import React, { useState } from 'react';\nimport Navbar from \"./components/NavBar/Navbar\";\nimport Dashboard from './components/DashBoard/Dashboard';\nimport Signin from \"./components/SignIn/Sigin\";\nimport Projects from \"./components/Projects/Projects\";\nimport EmployeeContainer from \"./components/Employee/EmployeeContainer\";\nimport {Switch, Route, Redirect} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport Changepassword from './components/Changepassword/Changepassword';\n\nfunction App() {\n  let [isAuth,setAuth] = useState(false);\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar isAuth={isAuth} setAuth={setAuth} />\n        <Switch>\n          <Route exact path=\"/homepage/build\"><Signin isAuth={isAuth} setAuth={setAuth} /></Route>\n          <Route path=\"/homepage/build/employees\"><EmployeeContainer isAuth={isAuth} /></Route>\n          <Route path=\"/homepage/build/projects\"><Projects isAuth={isAuth}/></Route>\n          <Route path=\"/homepage/build/dashboard\"><Dashboard isAuth={isAuth} /></Route>\n          <Route path=\"/homepage/build/change_password\"><Changepassword isAuth={isAuth} /></Route>\n          {/* <Redirect from=\"/\" to=\"/build\" /> */}\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './vector-background.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon.fb1b5c09.jpg\";"],"sourceRoot":""}